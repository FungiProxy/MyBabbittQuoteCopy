"""add housing_types table

Revision ID: 2e9b3c6d02e0
Revises: 3a7689ab8245
Create Date: 2025-06-19 00:45:31.354853

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "2e9b3c6d02e0"
down_revision: Union[str, None] = "3a7689ab8245"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "housing_types",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("code", sa.String(), nullable=True),
        sa.Column("base_price", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "options",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("price_type", sa.String(), nullable=True),
        sa.Column("category", sa.String(), nullable=True),
        sa.Column("product_families", sa.String(), nullable=True),
        sa.Column("excluded_products", sa.String(), nullable=True),
        sa.Column("choices", sa.JSON(), nullable=True),
        sa.Column("adders", sa.JSON(), nullable=True),
        sa.Column("rules", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_options_category"), "options", ["category"], unique=False)
    op.create_index(op.f("ix_options_id"), "options", ["id"], unique=False)
    op.create_index(op.f("ix_options_name"), "options", ["name"], unique=False)
    op.drop_table("exotic_metal_options")
    op.drop_table("pricing_rules")
    op.drop_table("mechanical_options")
    op.drop_table("electrical_options")

    with op.batch_alter_table("material_availability", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.INTEGER(), nullable=False, autoincrement=True
        )
        batch_op.alter_column(
            "material_code",
            existing_type=sa.TEXT(),
            type_=sa.String(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "product_type",
            existing_type=sa.TEXT(),
            type_=sa.String(),
            existing_nullable=False,
        )
        batch_op.drop_index(op.f("ix_material_availability_material_product"))
        batch_op.create_foreign_key(
            "fk_material_availability_material_code",
            "materials",
            ["material_code"],
            ["code"],
        )
        batch_op.drop_column("product_specific_adder")

    with op.batch_alter_table("product_families", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.INTEGER(), nullable=False, autoincrement=True
        )
        batch_op.alter_column(
            "name", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=False
        )
        batch_op.alter_column(
            "category",
            existing_type=sa.TEXT(),
            type_=sa.String(),
            existing_nullable=True,
        )

    with op.batch_alter_table("quote_item_options", schema=None) as batch_op:
        batch_op.create_index(op.f("ix_quote_item_options_id"), ["id"], unique=False)
        batch_op.create_foreign_key(
            "fk_quote_item_options_option_id", "options", ["option_id"], ["id"]
        )
        batch_op.drop_column("option_table")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("quote_item_options", schema=None) as batch_op:
        batch_op.add_column(sa.Column("option_table", sa.VARCHAR(), nullable=False))
        batch_op.drop_constraint("fk_quote_item_options_option_id", type_="foreignkey")
        batch_op.drop_index(op.f("ix_quote_item_options_id"))

    with op.batch_alter_table("product_families", schema=None) as batch_op:
        batch_op.alter_column(
            "category",
            existing_type=sa.String(),
            type_=sa.TEXT(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "name", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=False
        )
        batch_op.alter_column(
            "id", existing_type=sa.INTEGER(), nullable=True, autoincrement=True
        )

    with op.batch_alter_table("material_availability", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "product_specific_adder",
                sa.REAL(),
                server_default=sa.text("(0.0)"),
                nullable=True,
            )
        )
        batch_op.drop_constraint(
            "fk_material_availability_material_code", type_="foreignkey"
        )
        batch_op.create_index(
            op.f("ix_material_availability_material_product"),
            ["material_code", "product_type"],
            unique=False,
        )
        batch_op.alter_column(
            "product_type",
            existing_type=sa.String(),
            type_=sa.TEXT(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "material_code",
            existing_type=sa.String(),
            type_=sa.TEXT(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "id", existing_type=sa.INTEGER(), nullable=True, autoincrement=True
        )

    op.create_table(
        "electrical_options",
        sa.Column("id", sa.INTEGER(), nullable=True),
        sa.Column("product_family_id", sa.INTEGER(), nullable=False),
        sa.Column("option_type", sa.VARCHAR(), nullable=False),
        sa.Column("option_name", sa.VARCHAR(), nullable=False),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column(
            "price_adder", sa.FLOAT(), server_default=sa.text("(0.0)"), nullable=True
        ),
        sa.Column(
            "price_type", sa.VARCHAR(), server_default=sa.text("'fixed'"), nullable=True
        ),
        sa.Column("choices", sa.TEXT(), nullable=True),
        sa.Column("adders", sa.TEXT(), nullable=True),
        sa.Column(
            "is_available", sa.INTEGER(), server_default=sa.text("1"), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["product_family_id"],
            ["product_families.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "mechanical_options",
        sa.Column("id", sa.INTEGER(), nullable=True),
        sa.Column("product_family_id", sa.INTEGER(), nullable=False),
        sa.Column("option_type", sa.VARCHAR(), nullable=False),
        sa.Column("option_name", sa.VARCHAR(), nullable=False),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column(
            "price_adder", sa.FLOAT(), server_default=sa.text("(0.0)"), nullable=True
        ),
        sa.Column(
            "price_type", sa.VARCHAR(), server_default=sa.text("'fixed'"), nullable=True
        ),
        sa.Column("choices", sa.TEXT(), nullable=True),
        sa.Column("adders", sa.TEXT(), nullable=True),
        sa.Column(
            "is_available", sa.INTEGER(), server_default=sa.text("1"), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["product_family_id"],
            ["product_families.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "pricing_rules",
        sa.Column("id", sa.INTEGER(), nullable=True),
        sa.Column("rule_type", sa.VARCHAR(), nullable=False),
        sa.Column("rule_name", sa.VARCHAR(), nullable=False),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column("product_families", sa.TEXT(), nullable=True),
        sa.Column("choices", sa.TEXT(), nullable=True),
        sa.Column("adders", sa.TEXT(), nullable=True),
        sa.Column(
            "price_type",
            sa.VARCHAR(),
            server_default=sa.text("'per_unit'"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "exotic_metal_options",
        sa.Column("id", sa.INTEGER(), nullable=True),
        sa.Column("product_family_id", sa.INTEGER(), nullable=False),
        sa.Column("metal_type", sa.VARCHAR(), nullable=False),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column(
            "price_multiplier",
            sa.FLOAT(),
            server_default=sa.text("(1.0)"),
            nullable=True,
        ),
        sa.Column(
            "minimum_charge", sa.FLOAT(), server_default=sa.text("(0.0)"), nullable=True
        ),
        sa.Column(
            "is_available", sa.INTEGER(), server_default=sa.text("1"), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["product_family_id"],
            ["product_families.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_index(op.f("ix_options_name"), table_name="options")
    op.drop_index(op.f("ix_options_id"), table_name="options")
    op.drop_index(op.f("ix_options_category"), table_name="options")
    op.drop_table("options")
    op.drop_table("housing_types")
    # ### end Alembic commands ###
